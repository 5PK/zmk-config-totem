//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv {
    time-to-max-speed-ms = <100>;
    acceleration-exponent = <2>;
};

/ {
    combos {
        compatible = "zmk,combos";

        ESC2 {
            bindings = <&kp ESC>;
            key-positions = <12 13>;
            layers = <0 1 2 3>;
        };

        TAB2 {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
            layers = <0 1 2 3>;
        };

        ENTER2 {
            bindings = <&kp ENTER>;
            key-positions = <17 16>;
            layers = <0 1 2 3>;
        };

        BACKSPACE2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 6>;
            layers = <0 1 2 3>;
        };

        LSHIFT2 {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <11 12>;
            layers = <0 2 1 3>;
        };

        RSHIFT2 {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <17 18>;
            layers = <0 1 2 3>;
        };

        delete2 {
            bindings = <&kp DEL>;
            key-positions = <7 8>;
            layers = <0 1 2 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
                &kp Q  &kp W  &kp E         &kp R  &kp T          &kp Y  &kp U             &kp I      &kp O    &kp P
                &kp A  &kp S  &kp D         &kp F  &kp G          &kp H  &kp J             &kp K      &kp L    &kp SEMI
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V  &kp B          &kp N  &kp M             &kp COMMA  &kp DOT  &kp FSLH  &kp APOS
                              &kp LEFT_ALT  &mo 3  &lt 1 SPACE    &mo 2  &kp LEFT_CONTROL  &kp RGUI
            >;
        };

        numbers {
            bindings = <
        &kp N1  &kp N2  &kp N3  &kp N4     &kp N5           &kp N6           &kp N7            &kp N8  &kp N9  &kp N0
        &none   &none   &none   &kp SPACE  &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp N4            &kp N5  &kp N3  &kp KP_PLUS
&trans  &none   &none   &none   &none      &none            &kp N0           &kp N1            &kp N2  &kp N3  &kp KP_MINUS  &kp KP_EQUAL
                        &trans  &trans     &trans           &trans           &kp LEFT_CONTROL  &trans
            >;
        };

        symbols {
            bindings = <
        &kp EXCL   &kp AT     &kp HASH       &kp DOLLAR         &kp PERCENT         &kp CARET          &kp AMPERSAND     &kp ASTERISK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
        &kp GRAVE  &kp TILDE  &kp MINUS      &kp LEFT_BRACE     &kp LEFT_BRACKET    &kp RIGHT_BRACKET  &kp RIGHT_BRACE   &kp PLUS          &kp UNDER             &kp EQUAL
&trans  &none      &kp PIPE   &kp LESS_THAN  &kp DOUBLE_QUOTES  &kp BACKSLASH       &kp SLASH          &kp SINGLE_QUOTE  &kp GREATER_THAN  &none                 &none                  &kp DEL
                              &trans         &trans             &trans              &trans             &kp LEFT_CONTROL  &trans
            >;
        };

        device {
            bindings = <
        &kp DEL     &kp F1  &kp F2   &kp F3   &kp F4     &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP      &kp END          &kp BACKSPACE
        &kp K_MUTE  &kp F5  &kp F6   &kp F7   &kp F8     &kp LEFT_ARROW  &kp DOWN       &kp UP           &kp RIGHT        &none
&trans  &none       &kp F9  &kp F10  &kp F11  &kp F12    &none           &kp C_VOL_DN   &kp C_VOLUME_UP  &kp PAUSE_BREAK  &none          &none
                            &trans   &trans   &trans     &trans          &trans         &trans
            >;
        };

        mouse {
            bindings = <
       &none  &none           &mmv MOVE_UP    &none            &none     &none   &msc SCRL_DOWN  &msc SCRL_UP  &none  &none
       &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none     &none   &mkp LCLK       &mkp RCLK     &none  &none
&none  &none  &none           &none           &none            &none     &none   &none           &none         &none  &none  &none
                              &trans          &trans           &trans    &trans  &trans          &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        mouse {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };
};
